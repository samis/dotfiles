
* init.el

** Correctly set the load-path
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/lisp")
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp")
#+END_SRC

** Load all of my random lisp libraries.
#+BEGIN_SRC emacs-lisp
(defun my-load-all-in-directory (dir)
  "`load' all elisp libraries in directory DIR which are not already loaded."
  (interactive "D")
  (let ((libraries-loaded (mapcar #'file-name-sans-extension
                                  (delq nil (mapcar #'car load-history)))))
    (dolist (file (directory-files dir t ".+\\.elc?$"))
      (let ((library (file-name-sans-extension file)))
        (unless (member library libraries-loaded)
          (load library nil t)
          (push library libraries-loaded))))))
(my-load-all-in-directory "~/.emacs.d/lisp/")
#+END_SRC

** Set the correct font settings for use elsewhere in Emacs.
#+BEGIN_SRC emacs-lisp
(set-face-attribute 'default nil :family "Input Mono Compressed" :height 98)
(set-emoji-font nil)
(add-hook 'after-make-frame-functions 'set-emoji-font)
(add-hook 'eshell-mode-hook 'use-ohsnapu)
(add-hook 'term-mode-hook 'use-ohsnapu)
#+END_SRC

** Configure built-in global minor modes
#+BEGIN_SRC emacs-lisp
(global-auto-revert-mode)
(global-linum-mode t)
(cua-mode 1)
(global-visual-line-mode)
(winner-mode 1)
(add-hook 'prog-mode-hook 'flyspell-prog-mode)
(add-hook 'text-mode-hook 'flyspell-mode)
#+END_SRC

** Tweak some IDO settings
#+BEGIN_SRC emacs-lisp
(setq ido-use-filename-at-point 'guess)
(setq ido-use-virtual-buffers t)
#+END_SRC
** Load the rest of my init code.
#+BEGIN_SRC emacs-lisp
(setq init-loader-show-log-after-init nil)
(setq my-packages '(el-get
                    better-defaults
                    monokai-theme
                    markdown-mode
                    magit
                    undo-tree
                    unicode-fonts
                    spaceline
                    info+
                    linkd
                    yaml-mode
                    geiser
                    matrix-client 
                    window-purpose
                    sr-speedbar
                    org-mode
                    csv-mode 
                    company-mode
                    smex
                    ido-ubiquitous
                    flx-ido
                    aggressive-indent-mode
                    diminish
                    let-alist
                    imenu-list
                    projectile
                    which-key))
(init-loader-load "~/.emacs.d/init/")
#+END_SRC
