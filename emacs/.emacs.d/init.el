(add-to-list 'load-path "~/.emacs.d/el-get/el-get")
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp")
(setq el-get-user-package-directory "~/.emacs.d/configuration")
(set-face-attribute 'default nil :family "Input Mono Compressed" :height 98)
(setq inhibit-startup-screen t)
(defun my-load-all-in-directory (dir)
  "`load' all elisp libraries in directory DIR which are not already loaded."
  (interactive "D")
  (let ((libraries-loaded (mapcar #'file-name-sans-extension
                                  (delq nil (mapcar #'car load-history)))))
    (dolist (file (directory-files dir t ".+\\.elc?$"))
      (let ((library (file-name-sans-extension file)))
        (unless (member library libraries-loaded)
          (load library nil t)
          (push library libraries-loaded))))))
(my-load-all-in-directory "~/.emacs.d/lisp/")
(ensure-el-get-is-present)
(set-emoji-font nil)
(add-hook 'after-make-frame-functions 'set-emoji-font)

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(global-auto-revert-mode)
(setq my-packages '(el-get monokai-theme markdown-mode magit undo-tree unicode-fonts spaceline info+ linkd yaml-mode geiser matrix-client sr-speedbar org-mode csv-mode better-defaults pos-tip company-mode company-quickhelp smex ido-ubiquitous diminish))
(setq el-get-packages
      (append my-packages
              (mapcar #'el-get-source-name el-get-sources)))
(el-get 'sync el-get-packages)
(setq vc-follow-symlinks t)
(global-linum-mode t)
(setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                         ("marmalade" . "https://marmalade-repo.org/packages/")
                         ("melpa" . "https://melpa.org/packages/")))
(cua-mode 1)
(setq custom-file "~/.emacs.d/configuration/init-customize.el")
(load custom-file)
(add-hook 'eshell-mode-hook 'use-ohsnapu)
(add-hook 'term-mode-hook 'use-ohsnapu)
(ensure-server-is-running)
(global-visual-line-mode)
(setq ido-use-filename-at-point 'guess)
(setq ido-use-virtual-buffers t)
